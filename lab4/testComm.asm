.model small          ; Указывает модель памяти "small" (один сегмент кода и данных)

.stack 100h           ; Определение стека размером 100h (256 байт)

.data                 ; Начало секции данных
    newline   db 13, 10, '$' ; Строка для перевода каретки и новой строки, завершаемая '$'

.code                 ; Начало секции кода
start:                ; Точка входа в программу
    mov ax, @data     ; Загружаем адрес сегмента данных в AX
    mov ds, ax        ; Устанавливаем DS равным сегменту данных
    mov es, [2Ch]     ; Загружаем адрес сегмента среды (environment segment) в ES
    mov si, 80h       ; SI указывает на начало командной строки (смещение 80h)
    mov cl, es:[si]   ; Загружаем длину командной строки в CL
    cmp cl, 0         ; Проверяем, есть ли параметры (длина = 0)
    je no_params      ; Если параметров нет, переходим к no_params
    mov ah, 02h       ; Функция DOS 02h - вывод символа
    inc si            ; Увеличиваем SI, чтобы пропустить длину строки
print_loop:           ; Цикл вывода параметров командной строки
    mov dl, es:[si]   ; Загружаем текущий символ командной строки в DL
    int 21h           ; Вызов прерывания DOS для вывода символа
    inc si            ; Увеличиваем индекс SI
    loop print_loop   ; Уменьшаем CL и повторяем цикл, пока CL != 0
no_params:            ; Обработка случая, когда параметров нет
    mov ah, 09h       ; Функция DOS 09h - вывод строки
    lea dx, newline   ; Загружаем адрес строки перевода строки в DX
    int 21h           ; Вызов прерывания DOS для вывода строки
    mov ax, 4C00h     ; Функция DOS 4Ch - завершение программы
    int 21h           ; Вызов прерывания DOS для завершения
end start             ; Конец программы, точка входа - start